const express = require("express");
const bodyParser = require("body-parser");
const path = require("path");

const app = express();
const PORT = process.env.PORT || 3000;

app.use(bodyParser.json());
app.use(express.static("public")); // –¥–ª—è inject.js

const questions = {}; // questionID: { html, imageUrl }
const answers = {};   // questionID: "B"

// üëâ –í—ã–¥–∞—ë—Ç inject.js –ø–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ
app.get("/u:uid", (req, res) => {
  res.sendFile(path.join(__dirname, "public", "inject.js"));
});

// üëâ –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤–æ–ø—Ä–æ—Å
app.post("/manual-review", (req, res) => {
  const { questionID, questionHTML, imageUrl } = req.body;
  questions[questionID] = { html: questionHTML, imageUrl };
  res.sendStatus(200);
});

// üëâ –û—Ç–¥–∞—ë—Ç –æ—Ç–≤–µ—Ç
app.get("/get-answer/:questionID", (req, res) => {
  const { questionID } = req.params;
  const answer = answers[questionID] || null;
  res.json({ answer });
});

// üëâ –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
app.get("/admin", (req, res) => {
  let html = `<h2>Admin panel ‚Äî –í–æ–ø—Ä–æ—Å—ã</h2>`;
  for (const [id, q] of Object.entries(questions)) {
    html += `
      <div style="border:1px solid #ccc; padding:10px; margin:10px;">
        <strong>ID:</strong> ${id}<br>
        <form method="POST" action="/answer" style="margin-top:5px;">
          <textarea name="id" hidden>${id}</textarea>
          ${q.imageUrl ? `<img src="${q.imageUrl}" style="max-width:300px;"><br>` : ""}
          <div style="max-height:150px; overflow:auto;">${q.html}</div>
          <input name="answer" placeholder="–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç (–Ω–∞–ø—Ä. A)" required>
          <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
        </form>
      </div>
    `;
  }
  res.send(html);
});

// üëâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞
app.use(bodyParser.urlencoded({ extended: true }));
app.post("/answer", (req, res) => {
  const { id, answer } = req.body;
  answers[id] = answer.toUpperCase();
  res.redirect("/admin");
});

// üü¢ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
